# Byte-compiled / optimized / DLL files
__pycache__/
src/__pycache__/
tests/__pycache__/
build_scripts/__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
# Don't ignore .spec files - they're needed for building
# *.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, uncomment this line:
#.idea/

# VS Code
.vscode/
*.code-workspace

# ===================================
# X4 Ship Parser Specific Configuration
# ===================================

# X4 Game Data Files (large and copyrighted - auto-extracted)
data/
*.xml
*.xsd
*.cat
*.dat

# Keep essential structure files but ignore extracted data
!data/.gitkeep
!data/README.md

# Build Artifacts
build/
dist/*.exe
dist/*.dll
dist/data/
# Keep user documentation and tools in dist/
!dist/README_USERS.txt
!dist/Readme.txt
!dist/XRCatTool*.exe

# Temporary and Debug Files  
debug_*.py
temp_*.py
check_*.py
analysis_*.py
final_verification.py
# Tests are now in tests/ directory and should be tracked
# test_*.py

# Output and Export Files
output/
exports/
*.csv
*.xlsx

# Application Logs
*.log
logs/

# PyQt6 Cache Files
*.ui~
*.qrc~

# OS-Specific Files
.DS_Store
Thumbs.db
desktop.ini
*.lnk

# Backup Files
*.bak
*.backup
*~
*.swp
*.swo

# Development Environment
.vscode/
.idea/
*.code-workspace
# Keep the workspace file for this project
!X4_Ship_Parse.code-workspace

# Testing Output
test_output/
coverage/
.coverage.*

# Language Detection Cache
language_cache/
*.cache

# Virtual Environment (in case someone puts it in project)
.env
.venv
venv/
env/